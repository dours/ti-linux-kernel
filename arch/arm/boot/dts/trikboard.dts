/*
 * Device Tree for CyberTech Labs trik board
 *
 * Copyright (C) CyberTech Labs Ltd - http://www.trikset.com
 *
 * This program is free software; you can redistribute  it and/or modify it
 * under  the terms of  the GNU General  Public License as published by the
 * Free Software Foundation, version 2.
 */
/dts-v1/;
#include "da850.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/linux-event-codes.h>

// cannot include include/linux/platform_data/gpio-davinci.h into a .dts  
#define GPIO_TO_PIN(bank, gpio) (16 * (bank) + (gpio))


/ {
	compatible = "ctl,trikboard", "ti,da850";
	model = "TRIKBOARD";

	chosen {
		stdout-path = &serial1;
	};

	aliases {
		serial0 = &serial0;
		serial1 = &serial1;
		serial2 = &serial2;
		spi0 = &spi0;
		i2c1 = &i2c0;
		i2c2 = &i2c1;
	};

	soc@1c00000 {
		pmx_core: pinmux@14120 {
			status = "okay";

			mmc0_cd_pin: pinmux_mmc0_cd {
				pinctrl-single,bits = <
					/* GP4[1] */
					0x28 0x08000000 0x0f000000
				>;
			};
			mmc1_pins: pinmux_mmc1_pins {
				pinctrl-single,bits = <
					/* GP6[9], MMCSD1_CLK, MMCSD1_CMD, MMCSD1_DAT[0-3] */
					0x34 0x08000000 0x0f000000
					0x48 0x00022200 0x000fff00
					0x4C 0x00022200 0x000fff00
				>;
			};
			mcasp0_pins: pinmux_mcasp0_pins {
				pinctrl-single,bits = <
					/*
					 * AHCLKX, ACLKX, AFSX, AHCLKR, ACLKR,
					 * AFSR, AMUTE
					 */
					0x00 0x11111111 0xffffffff
					/* AXR11, AXR12 */
					0x04 0x00011000 0x000ff000
				>;
			};
			nand_pins: nand_pins {
				pinctrl-single,bits = <
					/* EMA_WAIT[0], EMA_OE, EMA_WE, EMA_CS[4], EMA_CS[3] */
					0x1c 0x10110110  0xf0ff0ff0
					/*
					 * EMA_D[0], EMA_D[1], EMA_D[2],
					 * EMA_D[3], EMA_D[4], EMA_D[5],
					 * EMA_D[6], EMA_D[7]
					 */
					0x24 0x11111111  0xffffffff
					/* EMA_A[1], EMA_A[2] */
					0x30 0x01100000  0x0ff00000
				>;
			};
			spi0_cs1_pin: pinmux_spi0_cs1 {
				pinctrl-single,bits = <
					/* CS1 */
					0x10 0x00000001 0x000000f0
				>;
			};
			spi1_cs1_pin: pinmux_spi1_cs1 {
				pinctrl-single,bits = <
					/* GP4[9] */
					0x24 0x08000000 0x0f000000
				>;
			};
			wifi_wl_en_pin: pinmux_wifi_wl_en {
				pinctrl-single,bits = <
					/* GP5[11] */
					0x2c 0x00080000 0x000f0000
				>;
			};
			lcd_pins: pinmux_lcd_pins {
				pinctrl-single,bits = <
					/*
					 * LCD_D[2], LCD_D[3], LCD_D[4], LCD_D[5],
					 * LCD_D[6], LCD_D[7]
					 */
					0x40 0x22222200 0xffffff00
					/*
					 * LCD_D[10], LCD_D[11], LCD_D[12], LCD_D[13],
					 * LCD_D[14], LCD_D[15], LCD_D[0], LCD_D[1]
					 */
					0x44 0x22222222 0xffffffff
					/* LCD_D[8], LCD_D[9] */
					0x48 0x00000022 0x000000ff

					/* LCD_PCLK, GP8[10] (reset)  */
					0x48 0x82000000 0xff000000
					/* LCD_AC_ENB_CS, LCD_VSYNC, LCD_HSYNC */
					0x4c 0x02000022 0x0f0000ff
                                        /* GP6[12] (backlight) */ 
                                        0x34 0x00008000 0x0000f000 
                                        
				>;
			};
                        /* pins to enable power_connectors and the voltage translators ,
                           reset and program and interrupt pin for the MSP, resets for the video modules,
                           LCD backlight 
                           JD ports controls 
                           some "GPIO" PCB signals 
                        */
                        gpios_to_userspace: pinmux_gpios_to_userspace {
                                pinctrl-single,bits = <
                                /* GP5[14], 5[13], 5[9, 8, 7, 6, 5, 4, 3, 0] */
                                0x2c 0x88000880 0xff000ff0
                                0x30 0x80088888 0xf00fffff 
                                /* GP3[7, 5, 3, 2, 1] */
                                0x20 0x08880808 0x0fff0f0f
                                /* GP2[5, 4, 3, 2] */ 
                                0x18 0x00888800 0x00ffff00 
                                /* 1[12, 11, 10] */
                                0x08 0x00444000 0x00fff000
                                /* GP0[2, 3, 4] */
                                0x04 0x00888000 0x00fff000 
                                >; 
                        };
                        button_pins: pinmux_button_pins {
                                pinctrl-single,bits = <
                                       /* GP2[7], GP2[0] */
                                       0x18 0x80000008 0xf000000f  
                                       /* GP3[13], GP3[15], GP3[12] */
                                       0x1C 0x00008808 0x0000ff0f 
                                       /* GP3[4] */
                                       0x20 0x00008000 0x0000f000 
                                       /* GP1[9] */
                                       0x08 0x04000000 0x0f000000 
                               >;
                       };
                       /* here gpio2 means a signal name in the schematics 
                          it is a reset signal for the JVP2 connector */ 
		       pinctrl_gpio2: pinmux_pinctrl_gpio2 {
                               pinctrl-single,bits = < 
                               /* GP2[1] */ 
                               0x18 0x08000000 0x0f000000 
			       >; 
                       }; 
 		       pinctrl_gpio1: pinmux_pinctrl_gpio1 {
                               pinctrl-single,bits = < 
                               /* GP6[13] */ 
                               0x34 0x00000800 0x00000f00
			       >; 
                       }; 
                      pinctrl_clkout: pinmux_pinctrl_clkout { 
                               pinctrl-single,bits = <  
                                   /* clkout */ 
                                   0x34 0x00000010 0x000000f0
                               >; 
                       };

         	};
		serial0: serial@42000 {
			status = "okay";
		};
		serial1: serial@10c000 {
			status = "okay";
		};
		serial2: serial@10d000 {
			status = "okay";
		};
                ehrpwm0: pwm@300000 {
                        pinctrl-names = "default";
                        pinctrl-0 = <&ehrpwm0b_pins>; 
                        status = "okay";
                }; 
                ehrpwm1: pwm@302000 {
                        pinctrl-names = "default";
                        pinctrl-0 = <&ehrpwm1a_pins &ehrpwm1b_pins>; 
                        status = "okay";
                }; 
                ecap0: ecap@306000 {
                        pinctrl-names = "default";
			pinctrl-0 = <&ecap0_pins>; 
		        status = "okay";
                };
                ecap1: ecap@307000 {
                        pinctrl-names = "default";
			pinctrl-0 = <&ecap1_pins>; 
		        status = "okay";
                };
                ecap2: ecap@308000 {
                        pinctrl-names = "default";
			pinctrl-0 = <&ecap2_pins>; 
		        status = "okay";
                };
		rtc0: rtc@23000 {
			status = "okay";
		};
		i2c0: i2c@22000 {
			status = "okay";
			clock-frequency = <10000>;
			pinctrl-names = "default";
			pinctrl-0 = <&i2c0_pins>;
			ov7670d0: camera@21 {
	                        pinctrl-names = "default";
        	                pinctrl-0 = <&pinctrl_gpio1 &pinctrl_clkout>; 
				compatible = "ovti,ov7670";
				reg = <0x21>;
		  		reset-gpios = <&gpio GPIO_TO_PIN(6,13) GPIO_ACTIVE_LOW>; 
				port {
					ov7670e0: endpoint {
						remote-endpoint = <&vpif_input_ch0>;
					};
				};
			};


		};
		i2c1: i2c@228000 {
			status = "okay";
			clock-frequency = <100000>;
			pinctrl-names = "default";
			pinctrl-0 = <&i2c1_pins>;

			ov7670d1: camera@21 {
	                        pinctrl-names = "default";
        	                pinctrl-0 = <&pinctrl_gpio2 >; 
				compatible = "ovti,ov7670";
				reg = <0x21>;
		  		reset-gpios = <&gpio GPIO_TO_PIN(2,1) GPIO_ACTIVE_LOW>; 
				port {
					ov7670e1: endpoint {
						remote-endpoint = <&vpif_input_ch1>;
					};
				};
			};

			tlv320aic3106: tlv320aic3106@18 {
				#sound-dai-cells = <0>;
				compatible = "ti,tlv320aic3106";
				reg = <0x18>;
				status = "okay";

				/* Regulators */
				IOVDD-supply = <&cr_3_3>;
				AVDD-supply = <&cr_3_3>;
				DRVDD-supply = <&cr_3_3>;
				DVDD-supply = <&cr_1_8>;
			};
			mma845x: mma845x@1c {
				compatible = "fsl,mma8451";
				reg = <0x1c>;
				status = "okay";
			};
			ds4420: ds4420@50 {
				compatible = "dallas,ds4420";
				reg = <0x50>;
				status = "okay";
			};
		};
		wdt: wdt@21000 {
			status = "okay";
		};
		mmc0: mmc@40000 {
			max-frequency = <50000000>;
			bus-width = <4>;
			status = "okay";
			cd-gpios = <&gpio 65 GPIO_ACTIVE_LOW>;
			pinctrl-names = "default";
			pinctrl-0 = <&mmc0_pins>, <&mmc0_cd_pin>;
		};
		mmc1: mmc@21b000 {
			max-frequency = <24000000>;
			bus-width = <4>;
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <&mmc1_pins>;
			non-removable;
			cap-power-off-card;
			#address-cells = <1>;
			#size-cells = <0>;
			vmmc-supply = <&wifi_vmmc>;
			wlcore: wlcore@2 {
				compatible = "ti,wl1271";
				reg = <2>;
				ref-clock-frequency = <38400000>;
				interrupt-parent = <&gpio>;
				interrupts = <105 IRQ_TYPE_EDGE_RISING>;
				status = "okay";
			};
		};
		spi0: spi@41000 {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <&spi0_pins &spi0_cs0_pin &spi0_cs1_pin>;
			flash: m25p80@0 {
				#address-cells = <1>;
				#size-cells = <1>;
				compatible = "m25p64";
				spi-max-frequency = <30000000>;
				m25p,fast-read;
				reg = <0>;
				partition@0 {
					label = "U-Boot-SPL";
					reg = <0x00000000 0x00010000>;
					read-only;
				};
				partition@1 {
					label = "U-Boot";
					reg = <0x00010000 0x00080000>;
					read-only;
				};
				partition@2 {
					label = "U-Boot-Env";
					reg = <0x00090000 0x00010000>;
					read-only;
				};
				partition@3 {
					label = "Kernel";
					reg = <0x000a0000 0x00280000>;
				};
				partition@4 {
					label = "Filesystem";
					reg = <0x00320000 0x00400000>;
				};
				partition@5 {
					label = "MAC-Address";
					reg = <0x007f0000 0x00010000>;
					read-only;
				};
			};
		};
		spi1: spi@30e000 {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <&spi1_pins &spi1_cs1_pin>;
			cs-gpios = <&gpio 73 0>;
			l3gd20: l3gd20@0 {
				compatible = "st,l3gd20-gyro";
				spi-max-frequency = <10000000>;
				reg = <0>;
			};
		};
		mdio: mdio@224000 {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <&mdio_pins>;
			bus_freq = <2200000>;
		};
		gpio: gpio@226000 {
                  /*      pinctrl-names = "default";
                        pinctrl-0 = <&gpios_to_userspace>; */
			status = "okay";
		};

                gpio-keys {
                        compatible = "gpio-keys";
                        #address-cells = <1>;
                        #size-cells = <0>;
                        pinctrl-names = "default";
                        pinctrl-0 = <&button_pins &gpios_to_userspace>;
                        autorepeat;
                        sw1  {
                             label = "sw1";
                             gpios = <&gpio GPIO_TO_PIN(2, 7) GPIO_ACTIVE_LOW>;
                             linux,code = <KEY_POWER>; 
                             gpio-key;
                             autorepeat;
                        }; 
                        sw6  {
                             label = "sw6";
                             gpios = <&gpio GPIO_TO_PIN(3, 13) GPIO_ACTIVE_LOW>;
                             linux,code = <KEY_DOWN>; 
                             gpio-key;
                             autorepeat;
                        }; 
                        sw2  {
                             label = "sw2";
                             gpios = <&gpio GPIO_TO_PIN(3, 4) GPIO_ACTIVE_LOW>;
                             linux,code = <KEY_UP>; 
                             gpio-key;
                             autorepeat;
                        }; 
                        sw3  {
                             label = "sw3";
                             gpios = <&gpio GPIO_TO_PIN(2, 0) GPIO_ACTIVE_LOW>;
                             linux,code = <KEY_ESC>; 
                             gpio-key;
                             autorepeat;
                        }; 
                        sw4  {
                             label = "sw4";
                             gpios = <&gpio GPIO_TO_PIN(1, 9) GPIO_ACTIVE_LOW>;
                             linux,code = <KEY_LEFT>;
                             gpio-key;
                             autorepeat;
                        }; 
                        sw5  {
                             label = "sw5";
                             gpios = <&gpio GPIO_TO_PIN(3, 15) GPIO_ACTIVE_LOW>;
                             linux,code = <KEY_RIGHT>; 
                             gpio-key;
                             autorepeat;
                        }; 
                        sw7  {
                             label = "sw7";
                             gpios = <&gpio GPIO_TO_PIN(3, 12) GPIO_ACTIVE_LOW>;
                             linux,code = <KEY_ENTER>; 
                             gpio-key;
                             autorepeat;
                        }; 
                };

		usb0: usb@200000 {
			dr_mode = "host";
			status = "okay";
		};
		usb1: usb@225000 {
			status = "okay";
		};
		cfgchip: chip-controller@1417c {
			usb_phy: usb-phy {
				status = "okay";
			};
		};
	};
	vbat: fixedregulator0 {
		compatible = "regulator-fixed";
		regulator-name = "vbat";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-boot-on;
	};
	cr_3_3: fixedregulator-3_3 {
		compatible = "regulator-fixed";
		regulator-name = "cr_3_3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
	};
	cr_1_8: fixedregulator-1_8 {
		compatible = "regulator-fixed";
		regulator-name = "cr_1_8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-boot-on;
	};
	wifi_vmmc: fixedregulator-wifi_wl_en {
		compatible = "regulator-fixed";
		regulator-name = "wifi_wl_en_reg";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		startup-delay-us = <70000>;
		pinctrl-names = "default";
		pinctrl-0 = <&wifi_wl_en_pin>;
		gpio = <&gpio 91 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	sound {
		compatible = "simple-audio-card";
		simple-audio-card,name = "DA850/OMAP-L138 EVM";
		simple-audio-card,widgets =
			"Line", "Line In",
			"Line", "Line Out";
		simple-audio-card,routing =
			"LINE1L", "Line In",
			"LINE1R", "Line In",
			"Line Out", "LLOUT",
			"Line Out", "RLOUT";
		simple-audio-card,format = "dsp_b";
		simple-audio-card,bitclock-master = <&link0_codec>;
		simple-audio-card,frame-master = <&link0_codec>;
		simple-audio-card,bitclock-inversion;

		simple-audio-card,cpu {
			sound-dai = <&mcasp0>;
			system-clock-frequency = <24576000>;
		};

		link0_codec: simple-audio-card,codec {
			sound-dai = <&tlv320aic3106>;
			system-clock-frequency = <24576000>;
		};
	};

        lcd { 
                compatible = "hack,ili9340";
 		pinctrl-names = "default";
		pinctrl-0 = <&lcd_pins>;
       }; 



};

&mcasp0 {
	#sound-dai-cells = <0>;
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&mcasp0_pins>;

	op-mode = <0>;          /* MCASP_IIS_MODE */
	tdm-slots = <2>;
	/* 4 serializer */
	serial-dir = <  /* 0: INACTIVE, 1: TX, 2: RX */
		0 0 0 0
		0 0 0 0
		0 0 0 1
		2 0 0 0
	>;
	tx-num-evt = <32>;
	rx-num-evt = <32>;
};

&edma0 {
	ti,edma-reserved-slot-ranges = <32 50>;
};

&edma1 {
	ti,edma-reserved-slot-ranges = <32 90>;
};


&vpif {
	compatible = "ti,da850-vpif";
	reg = <0x217000 0x1000>;
	interrupts = <92>;

	pinctrl-names = "default";
	pinctrl-0 = <&vpif_capture_pins>;

	status = "okay"; 

        ports { 

			#address-cells = <1>;
			#size-cells = <0>;
		port@0 {

			#address-cells = <1>;
			#size-cells = <0>;
                        reg = <0>;
			vpif_input_ch0: endpoint@0 {
				reg = <0>;
				bus-width = <8>;
				remote-endpoint = <&ov7670e0>; 
			}; 
                };

                port@1 {

			#address-cells = <1>;
			#size-cells = <0>;
			reg = <1>; 
			vpif_input_ch1: endpoint@0 {
				reg = <0>;
				bus-width = <8>;
				data-shift = <8>;
				remote-endpoint = <&ov7670e1>;   
			};
		};
        }; 
};


